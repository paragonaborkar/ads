package org.talend.designer.codegen.translators.business.openbravo;

import org.talend.core.model.process.INode;
import org.talend.core.model.process.ElementParameterParser;
import org.talend.core.model.metadata.IMetadataTable;
import org.talend.core.model.metadata.IMetadataColumn;
import org.talend.designer.codegen.config.CodeGeneratorArgument;
import org.talend.core.model.process.IConnection;
import org.talend.core.model.process.IConnectionCategory;
import org.talend.core.model.metadata.types.JavaTypesManager;
import org.talend.core.model.metadata.types.JavaType;
import java.util.List;

public class TOpenbravoERPInputBeginJava
{
  protected static String nl;
  public static synchronized TOpenbravoERPInputBeginJava create(String lineSeparator)
  {
    nl = lineSeparator;
    TOpenbravoERPInputBeginJava result = new TOpenbravoERPInputBeginJava();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "int nb_line_";
  protected final String TEXT_2 = " = 0;" + NL + "" + NL + "class NameSpaceTool_";
  protected final String TEXT_3 = " {" + NL + "" + NL + "    public java.util.HashMap<String, String> xmlNameSpaceMap = new java.util.HashMap<String, String>();" + NL + "    " + NL + "\tprivate java.util.List<String> defualtNSPath = new java.util.ArrayList<String>();" + NL + "" + NL + "    public void countNSMap(org.dom4j.Element el) {" + NL + "        for (org.dom4j.Namespace ns : (java.util.List<org.dom4j.Namespace>) el.declaredNamespaces()) {" + NL + "            if (ns.getPrefix().trim().length() == 0) {" + NL + "                xmlNameSpaceMap.put(\"pre\"+defualtNSPath.size(), ns.getURI());" + NL + "                String path = \"\";" + NL + "                org.dom4j.Element elTmp = el;" + NL + "                while (elTmp != null) {" + NL + "                \tif (elTmp.getNamespacePrefix() != null && elTmp.getNamespacePrefix().length() > 0) {" + NL + "                        path = \"/\" + elTmp.getNamespacePrefix() + \":\" + elTmp.getName() + path;" + NL + "                    } else {" + NL + "                        path = \"/\" + elTmp.getName() + path;" + NL + "                    }" + NL + "                    elTmp = elTmp.getParent();" + NL + "                }" + NL + "                defualtNSPath.add(path);" + NL + "            } else {" + NL + "                xmlNameSpaceMap.put(ns.getPrefix(), ns.getURI());" + NL + "            }" + NL + "" + NL + "        }" + NL + "        for (org.dom4j.Element e : (java.util.List<org.dom4j.Element>) el.elements()) {" + NL + "            countNSMap(e);" + NL + "        }" + NL + "    }" + NL + "    " + NL + "    public String addDefaultNSPrefix(String path, String loopPath) {" + NL + "        if (defualtNSPath.size() > 0) {" + NL + "        \tString fullPath = loopPath;" + NL + "        \tif(!path.equals(fullPath)){" + NL + "            \tfor (String tmp : path.split(\"/\")) {" + NL + "            \t\tif ((\"..\").equals(tmp)) {" + NL + "                        fullPath = fullPath.substring(0, fullPath.lastIndexOf(\"/\"));" + NL + "                    } else {" + NL + "                        fullPath += \"/\" + tmp;" + NL + "                    }" + NL + "            \t}" + NL + "            }" + NL + "        \tint[] indexs = new int[fullPath.split(\"/\").length - 1];" + NL + "            java.util.Arrays.fill(indexs, -1);" + NL + "            int length = 0;" + NL + "            for (int i = 0; i < defualtNSPath.size(); i++) {" + NL + "                if (defualtNSPath.get(i).length() > length && fullPath.startsWith(defualtNSPath.get(i))) {" + NL + "                    java.util.Arrays.fill(indexs, defualtNSPath.get(i).split(\"/\").length - 2, indexs.length, i);" + NL + "                    length = defualtNSPath.get(i).length();" + NL + "                }" + NL + "            }" + NL + "" + NL + "            StringBuilder newPath = new StringBuilder();" + NL + "            String[] pathStrs = path.split(\"/\");" + NL + "            for (int i = 0; i < pathStrs.length; i++) {" + NL + "                String tmp = pathStrs[i];" + NL + "                if (newPath.length() > 0) {" + NL + "                    newPath.append(\"/\");" + NL + "                }" + NL + "                if (tmp.length() > 0 && tmp.indexOf(\":\") == -1 && tmp.indexOf(\".\") == -1 /*&& tmp.indexOf(\"@\") == -1*/) {" + NL + "                    int index = indexs[i + indexs.length - pathStrs.length];" + NL + "                    if (index >= 0) {" + NL + "                    \t//==== add by wliu to support both filter and functions==" + NL + "\t\t\t\t\t\tif(tmp.indexOf(\"[\")>0 && tmp.indexOf(\"]\")>tmp.indexOf(\"[\")){//include filter" + NL + "\t\t\t\t\t\t\tString tmpStr=replaceElementWithNS(tmp,\"pre\"+index+\":\");" + NL + "\t\t\t\t\t\t\tnewPath.append(tmpStr);" + NL + "\t\t\t\t\t\t}else{" + NL + "\t\t\t\t\t\t\tif(tmp.indexOf(\"@\") != -1 || tmp.indexOf(\"(\")<tmp.indexOf(\")\")){  // include attribute" + NL + "\t\t\t\t\t\t\t\tnewPath.append(tmp);" + NL + "\t\t\t\t\t\t\t}else{" + NL + "\t\t\t\t\t\t//==add end=======\t" + NL + "                        \t\tnewPath.append(\"pre\").append(index).append(\":\").append(tmp);" + NL + "                        \t}" + NL + "                        }                    " + NL + "                    } else {" + NL + "                        newPath.append(tmp);" + NL + "                    }" + NL + "                } else {" + NL + "                    newPath.append(tmp);" + NL + "                }" + NL + "            }" + NL + "            return newPath.toString();" + NL + "        }" + NL + "        return path;" + NL + "    }" + NL + "" + NL + "\tprivate String matches = \"@*\\\\b[a-z|A-Z|_]+[[-]*\\\\w]*\\\\b[^'|^\\\\(]\";" + NL + "    private java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(matches);" + NL + "    " + NL + "\tprivate String replaceElementWithNS(String global, String pre){" + NL + "" + NL + "        java.util.regex.Matcher match = pattern.matcher(global);" + NL + "        StringBuffer sb = new StringBuffer();" + NL + "        match.reset();" + NL + "        while (match.find()) {" + NL + "            String group = match.group();" + NL + "            String tmp = \"\";" + NL + "            if (group.toLowerCase().matches(\"\\\\b(div|mod|and|or)\\\\b.*\") || group.matches(\"@.*\")) {" + NL + "                tmp = group;" + NL + "            } else {" + NL + "                tmp = tmp + pre + group;" + NL + "            }" + NL + "            match.appendReplacement(sb, tmp);" + NL + "        }" + NL + "        match.appendTail(sb);" + NL + "        " + NL + "        return sb.toString();" + NL + "\t}    " + NL + "" + NL + "}" + NL + "" + NL + "class XML_API_";
  protected final String TEXT_4 = "{" + NL + "\tpublic boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {" + NL + "        if (node != null && node instanceof org.dom4j.Element) {" + NL + "        \torg.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute(\"nil\");" + NL + "        \tif(attri != null && (\"true\").equals(attri.getText())){" + NL + "            \treturn true;" + NL + "            }" + NL + "        }" + NL + "        return false;" + NL + "    }" + NL + "" + NL + "    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {" + NL + "        return node == null ? true : false;" + NL + "    }" + NL + "" + NL + "    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {" + NL + "        if (node != null) {" + NL + "            return node.getText().length() == 0;" + NL + "        }" + NL + "        return false;" + NL + "    }" + NL + "}" + NL + "final String ob_url_";
  protected final String TEXT_5 = " = ";
  protected final String TEXT_6 = ";" + NL + "final String login_";
  protected final String TEXT_7 = " = ";
  protected final String TEXT_8 = ";" + NL;
  protected final String TEXT_9 = NL;
  protected final String TEXT_10 = " " + NL + "\tfinal String decryptedPassword_";
  protected final String TEXT_11 = " = routines.system.PasswordEncryptUtil.decryptPassword(";
  protected final String TEXT_12 = ");";
  protected final String TEXT_13 = NL + "\tfinal String decryptedPassword_";
  protected final String TEXT_14 = " = ";
  protected final String TEXT_15 = "; ";
  protected final String TEXT_16 = NL + NL + "final String pwd_";
  protected final String TEXT_17 = " = decryptedPassword_";
  protected final String TEXT_18 = ";" + NL + "final String method_";
  protected final String TEXT_19 = " = \"GET\";" + NL + "final String entity_";
  protected final String TEXT_20 = " = \"";
  protected final String TEXT_21 = "\";" + NL + "String whereClause_";
  protected final String TEXT_22 = " = ";
  protected final String TEXT_23 = ";" + NL + "final String orderBy_";
  protected final String TEXT_24 = " = \"";
  protected final String TEXT_25 = "\";" + NL + "final int firstResult_";
  protected final String TEXT_26 = " = ";
  protected final String TEXT_27 = ";" + NL + "final int maxResult_";
  protected final String TEXT_28 = " = ";
  protected final String TEXT_29 = ";" + NL + "whereClause_";
  protected final String TEXT_30 = " = java.net.URLEncoder.encode(whereClause_";
  protected final String TEXT_31 = ", \"UTF-8\");" + NL + "String urlString_";
  protected final String TEXT_32 = " = ob_url_";
  protected final String TEXT_33 = ".trim() + \"/\" + entity_";
  protected final String TEXT_34 = ".trim();" + NL + "boolean hasParameter = false;" + NL + "//where clause" + NL + "if(!whereClause_";
  protected final String TEXT_35 = ".equals(\"\")){" + NL + "\tif(!hasParameter){" + NL + "\t\turlString_";
  protected final String TEXT_36 = " += \"?where=\";" + NL + "\t\thasParameter = true;" + NL + "\t}else{" + NL + "\t\turlString_";
  protected final String TEXT_37 = " += \"&where=\";" + NL + "\t}" + NL + "\turlString_";
  protected final String TEXT_38 = " += whereClause_";
  protected final String TEXT_39 = ";" + NL + "}" + NL + "//orderby" + NL + "if(!orderBy_";
  protected final String TEXT_40 = ".equals(\"\")){" + NL + "\tif(!hasParameter){" + NL + "\t\turlString_";
  protected final String TEXT_41 = " += \"?\";" + NL + "\t\thasParameter = true;" + NL + "\t}else{" + NL + "\t\turlString_";
  protected final String TEXT_42 = " += \"&\";" + NL + "\t}" + NL + "\turlString_";
  protected final String TEXT_43 = " += (\"orderBy=\"+orderBy_";
  protected final String TEXT_44 = ");" + NL + "}" + NL + "//first result" + NL + "if(firstResult_";
  protected final String TEXT_45 = " > 0){" + NL + "\tif(!hasParameter){" + NL + "\t\turlString_";
  protected final String TEXT_46 = " += \"?\";" + NL + "\t\thasParameter = true;" + NL + "\t}else{" + NL + "\t\turlString_";
  protected final String TEXT_47 = " += \"&\";" + NL + "\t}" + NL + "\turlString_";
  protected final String TEXT_48 = " += (\"firstResult=\"+firstResult_";
  protected final String TEXT_49 = ");" + NL + "}" + NL + "//max result" + NL + "if(maxResult_";
  protected final String TEXT_50 = " > 0){" + NL + "\tif(!hasParameter){" + NL + "\t\turlString_";
  protected final String TEXT_51 = " += \"?\";" + NL + "\t\thasParameter = true;" + NL + "\t}else{" + NL + "\t\turlString_";
  protected final String TEXT_52 = " += \"&\";" + NL + "\t}" + NL + "\turlString_";
  protected final String TEXT_53 = " += (\"maxResult=\"+maxResult_";
  protected final String TEXT_54 = ");" + NL + "}" + NL + "" + NL + "final java.net.URL url_";
  protected final String TEXT_55 = " = new java.net.URL(urlString_";
  protected final String TEXT_56 = ");" + NL + "java.net.Authenticator.setDefault(new java.net.Authenticator() {" + NL + "" + NL + "\tprotected java.net.PasswordAuthentication getPasswordAuthentication() {" + NL + "\t\treturn new java.net.PasswordAuthentication(login_";
  protected final String TEXT_57 = ", pwd_";
  protected final String TEXT_58 = ".toCharArray());" + NL + "\t}" + NL + "});" + NL + "final java.net.HttpURLConnection hc_";
  protected final String TEXT_59 = " = (java.net.HttpURLConnection) url_";
  protected final String TEXT_60 = ".openConnection();" + NL + "hc_";
  protected final String TEXT_61 = ".setRequestMethod(method_";
  protected final String TEXT_62 = ");" + NL + "hc_";
  protected final String TEXT_63 = ".setAllowUserInteraction(false);" + NL + "hc_";
  protected final String TEXT_64 = ".setDefaultUseCaches(false);" + NL + "hc_";
  protected final String TEXT_65 = ".setDoOutput(true);" + NL + "hc_";
  protected final String TEXT_66 = ".setDoInput(true);" + NL + "hc_";
  protected final String TEXT_67 = ".setInstanceFollowRedirects(true);" + NL + "hc_";
  protected final String TEXT_68 = ".setUseCaches(false);" + NL + "hc_";
  protected final String TEXT_69 = ".setRequestProperty(\"Content-Type\", \"text/xml\");" + NL + "hc_";
  protected final String TEXT_70 = ".connect();" + NL + "int responseCode_";
  protected final String TEXT_71 = " = hc_";
  protected final String TEXT_72 = ".getResponseCode();" + NL + "String responseMsg_";
  protected final String TEXT_73 = " = hc_";
  protected final String TEXT_74 = ".getResponseMessage();" + NL + "//ResponseCode" + NL + "if(responseCode_";
  protected final String TEXT_75 = " == 401){" + NL + "\tSystem.out.println(\"Server returned HTTP response code: 401, response message: \"+ responseMsg_";
  protected final String TEXT_76 = " +\". Entity \" + entity_";
  protected final String TEXT_77 = " + \" is not readable by user \\\"\" + login_";
  protected final String TEXT_78 = " + \"\\\"\");\t" + NL + "}else if(responseCode_";
  protected final String TEXT_79 = " == 500){" + NL + "\tSystem.out.println(\"Server returned HTTP response code: 500, response message: \"+ responseMsg_";
  protected final String TEXT_80 = " +\". The server encountered an unexpected condition which prevented it from fulfilling the request.\");" + NL + "}else if(responseCode_";
  protected final String TEXT_81 = " != 200){" + NL + "\tSystem.out.println(\"Server returned HTTP response code: \" + responseCode_";
  protected final String TEXT_82 = " + \", response message: \"+ responseMsg_";
  protected final String TEXT_83 = " + \".\");" + NL + "}else{" + NL + "" + NL + "//hc_";
  protected final String TEXT_84 = ".getContentType();" + NL + "final java.io.InputStream is_";
  protected final String TEXT_85 = " = hc_";
  protected final String TEXT_86 = ".getInputStream();" + NL + "org.dom4j.io.SAXReader reader_";
  protected final String TEXT_87 = " = new org.dom4j.io.SAXReader();" + NL + "org.dom4j.Document doc_";
  protected final String TEXT_88 = " = reader_";
  protected final String TEXT_89 = ".read(is_";
  protected final String TEXT_90 = ");" + NL + "NameSpaceTool_";
  protected final String TEXT_91 = " nsTool_";
  protected final String TEXT_92 = " = new NameSpaceTool_";
  protected final String TEXT_93 = "();" + NL + "nsTool_";
  protected final String TEXT_94 = ".countNSMap(doc_";
  protected final String TEXT_95 = ".getRootElement());" + NL + "java.util.HashMap<String,String> xmlNameSpaceMap_";
  protected final String TEXT_96 = " = nsTool_";
  protected final String TEXT_97 = ".xmlNameSpaceMap;  " + NL + "String loopPath_";
  protected final String TEXT_98 = " = \"/ob:Openbravo/";
  protected final String TEXT_99 = "\";" + NL + "org.dom4j.XPath x_";
  protected final String TEXT_100 = " = doc_";
  protected final String TEXT_101 = ".createXPath(nsTool_";
  protected final String TEXT_102 = ".addDefaultNSPrefix(loopPath_";
  protected final String TEXT_103 = ", loopPath_";
  protected final String TEXT_104 = "));  " + NL + "x_";
  protected final String TEXT_105 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_106 = "); " + NL + "" + NL + "java.util.List<org.dom4j.tree.AbstractNode> nodeList_";
  protected final String TEXT_107 = " = (java.util.List<org.dom4j.tree.AbstractNode>)x_";
  protected final String TEXT_108 = ".selectNodes(doc_";
  protected final String TEXT_109 = ");\t" + NL + "XML_API_";
  protected final String TEXT_110 = " xml_api_";
  protected final String TEXT_111 = " = new XML_API_";
  protected final String TEXT_112 = "();" + NL + "String str_";
  protected final String TEXT_113 = " = \"\";" + NL + "String referenceFieldSeparator_";
  protected final String TEXT_114 = " = \";\";" + NL + "org.dom4j.Node node_";
  protected final String TEXT_115 = " = null;" + NL + "StringBuilder referenceValue_";
  protected final String TEXT_116 = " = new StringBuilder();" + NL + "is_";
  protected final String TEXT_117 = ".close();" + NL + "hc_";
  protected final String TEXT_118 = ".disconnect();" + NL + "for (org.dom4j.tree.AbstractNode temp_";
  protected final String TEXT_119 = ": nodeList_";
  protected final String TEXT_120 = ") {" + NL + "\tnb_line_";
  protected final String TEXT_121 = "++;";
  protected final String TEXT_122 = NL + "\t";
  protected final String TEXT_123 = " = new ";
  protected final String TEXT_124 = "Struct();";
  protected final String TEXT_125 = NL + "String itemType";
  protected final String TEXT_126 = "_";
  protected final String TEXT_127 = " = \"";
  protected final String TEXT_128 = "\";" + NL + "if(itemType";
  protected final String TEXT_129 = "_";
  protected final String TEXT_130 = ".equals(\"\")){" + NL + "\tthrow new Exceptin(\"No entity name found for the list item in field \\\"";
  protected final String TEXT_131 = "\\\".\");" + NL + "}";
  protected final String TEXT_132 = NL + "// List field: ";
  protected final String TEXT_133 = ". Entity type of the list item is \"";
  protected final String TEXT_134 = "\"." + NL + "java.util.List<org.dom4j.tree.AbstractNode> nodes";
  protected final String TEXT_135 = "_";
  protected final String TEXT_136 = " = temp_";
  protected final String TEXT_137 = ".selectNodes(\"./";
  protected final String TEXT_138 = "/";
  protected final String TEXT_139 = "\");" + NL + "//System.out.print(nodes23_";
  protected final String TEXT_140 = ".size());";
  protected final String TEXT_141 = NL;
  protected final String TEXT_142 = ".";
  protected final String TEXT_143 = " = new java.util.ArrayList<String>();" + NL + "for (org.dom4j.tree.AbstractNode node";
  protected final String TEXT_144 = "_";
  protected final String TEXT_145 = " : nodes";
  protected final String TEXT_146 = "_";
  protected final String TEXT_147 = ") {" + NL + "\t// string value for Reference." + NL + "    referenceValue_";
  protected final String TEXT_148 = ".delete(0, referenceValue_";
  protected final String TEXT_149 = ".length());" + NL + "    // @id" + NL + "    org.dom4j.XPath xTmp";
  protected final String TEXT_150 = "_";
  protected final String TEXT_151 = " = node";
  protected final String TEXT_152 = "_";
  protected final String TEXT_153 = ".createXPath(nsTool_";
  protected final String TEXT_154 = ".addDefaultNSPrefix(\"@id\", \"/ob:Openbravo/";
  protected final String TEXT_155 = "/";
  protected final String TEXT_156 = "/";
  protected final String TEXT_157 = "\"));" + NL + "    xTmp";
  protected final String TEXT_158 = "_";
  protected final String TEXT_159 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_160 = ");" + NL + "    Object obj";
  protected final String TEXT_161 = "_";
  protected final String TEXT_162 = " = xTmp";
  protected final String TEXT_163 = "_";
  protected final String TEXT_164 = ".evaluate(node";
  protected final String TEXT_165 = "_";
  protected final String TEXT_166 = ");" + NL + "    if (obj";
  protected final String TEXT_167 = "_";
  protected final String TEXT_168 = " instanceof String || obj";
  protected final String TEXT_169 = "_";
  protected final String TEXT_170 = " instanceof Number) {" + NL + "    \tnode_";
  protected final String TEXT_171 = " = node";
  protected final String TEXT_172 = "_";
  protected final String TEXT_173 = ";" + NL + "        str_";
  protected final String TEXT_174 = " = String.valueOf(obj";
  protected final String TEXT_175 = "_";
  protected final String TEXT_176 = ");" + NL + "\t} else {" + NL + "    \tnode_";
  protected final String TEXT_177 = " = xTmp";
  protected final String TEXT_178 = "_";
  protected final String TEXT_179 = ".selectSingleNode(node";
  protected final String TEXT_180 = "_";
  protected final String TEXT_181 = ");" + NL + "\t\tstr_";
  protected final String TEXT_182 = " = xTmp";
  protected final String TEXT_183 = "_";
  protected final String TEXT_184 = ".valueOf(node";
  protected final String TEXT_185 = "_";
  protected final String TEXT_186 = ");" + NL + "    }" + NL + "    " + NL + "    if (xml_api_";
  protected final String TEXT_187 = ".isDefNull(node_";
  protected final String TEXT_188 = ") || xml_api_";
  protected final String TEXT_189 = ".isEmpty(node_";
  protected final String TEXT_190 = ") || xml_api_";
  protected final String TEXT_191 = ".isMissing(node_";
  protected final String TEXT_192 = ")) {" + NL + "\t\t// nothing to append" + NL + "\t} else {" + NL + "    \treferenceValue_";
  protected final String TEXT_193 = ".append(str_";
  protected final String TEXT_194 = ");" + NL + "\t}" + NL + "    referenceValue_";
  protected final String TEXT_195 = ".append(referenceFieldSeparator_";
  protected final String TEXT_196 = ");" + NL + "    " + NL + "\t// @entityName" + NL + "    referenceValue_";
  protected final String TEXT_197 = ".append(\"";
  protected final String TEXT_198 = "\");" + NL + "    referenceValue_";
  protected final String TEXT_199 = ".append(referenceFieldSeparator_";
  protected final String TEXT_200 = ");" + NL + "    " + NL + "    // @identifier" + NL + "    xTmp";
  protected final String TEXT_201 = "_";
  protected final String TEXT_202 = " = node";
  protected final String TEXT_203 = "_";
  protected final String TEXT_204 = ".createXPath(nsTool_";
  protected final String TEXT_205 = ".addDefaultNSPrefix(\"@identifier\", \"/ob:Openbravo/";
  protected final String TEXT_206 = "/";
  protected final String TEXT_207 = "/";
  protected final String TEXT_208 = "\"));" + NL + "\txTmp";
  protected final String TEXT_209 = "_";
  protected final String TEXT_210 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_211 = ");" + NL + "    obj";
  protected final String TEXT_212 = "_";
  protected final String TEXT_213 = " = xTmp";
  protected final String TEXT_214 = "_";
  protected final String TEXT_215 = ".evaluate(node";
  protected final String TEXT_216 = "_";
  protected final String TEXT_217 = ");" + NL + "    if (obj";
  protected final String TEXT_218 = "_";
  protected final String TEXT_219 = " instanceof String || obj";
  protected final String TEXT_220 = "_";
  protected final String TEXT_221 = " instanceof Number) {" + NL + "    \tnode_";
  protected final String TEXT_222 = " = node";
  protected final String TEXT_223 = "_";
  protected final String TEXT_224 = ";" + NL + "        str_";
  protected final String TEXT_225 = " = String.valueOf(obj";
  protected final String TEXT_226 = "_";
  protected final String TEXT_227 = ");" + NL + "\t} else {" + NL + "    \tnode_";
  protected final String TEXT_228 = " = xTmp";
  protected final String TEXT_229 = "_";
  protected final String TEXT_230 = ".selectSingleNode(node";
  protected final String TEXT_231 = "_";
  protected final String TEXT_232 = ");" + NL + "\t\tstr_";
  protected final String TEXT_233 = " = xTmp";
  protected final String TEXT_234 = "_";
  protected final String TEXT_235 = ".valueOf(node";
  protected final String TEXT_236 = "_";
  protected final String TEXT_237 = ");" + NL + "\t}" + NL + "    if (xml_api_";
  protected final String TEXT_238 = ".isDefNull(node_";
  protected final String TEXT_239 = ") || xml_api_";
  protected final String TEXT_240 = ".isEmpty(node_";
  protected final String TEXT_241 = ") || xml_api_";
  protected final String TEXT_242 = ".isMissing(node_";
  protected final String TEXT_243 = ")) {" + NL + "\t\t//nothing to append" + NL + "\t} else {" + NL + "\t\treferenceValue_";
  protected final String TEXT_244 = ".append(str_";
  protected final String TEXT_245 = ");" + NL + "    }";
  protected final String TEXT_246 = NL + "    ";
  protected final String TEXT_247 = ".";
  protected final String TEXT_248 = ".add(referenceValue_";
  protected final String TEXT_249 = ".toString());" + NL + "}";
  protected final String TEXT_250 = NL + "//Reference type: values will be in string, the order is id, ntity-name, identifier, transient, inactive " + NL + "org.dom4j.XPath xTmp";
  protected final String TEXT_251 = "_1_";
  protected final String TEXT_252 = " = temp_";
  protected final String TEXT_253 = ".createXPath(nsTool_";
  protected final String TEXT_254 = ".addDefaultNSPrefix(\"";
  protected final String TEXT_255 = "/@id\", \"/ob:Openbravo/";
  protected final String TEXT_256 = "\"));" + NL + "xTmp";
  protected final String TEXT_257 = "_1_";
  protected final String TEXT_258 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_259 = ");" + NL + "Object obj";
  protected final String TEXT_260 = "_";
  protected final String TEXT_261 = " = xTmp";
  protected final String TEXT_262 = "_1_";
  protected final String TEXT_263 = ".evaluate(temp_";
  protected final String TEXT_264 = ");" + NL + "if(obj";
  protected final String TEXT_265 = "_";
  protected final String TEXT_266 = " instanceof String || obj";
  protected final String TEXT_267 = "_";
  protected final String TEXT_268 = " instanceof Number){" + NL + "\tnode_";
  protected final String TEXT_269 = " = temp_";
  protected final String TEXT_270 = ";" + NL + "\tstr_";
  protected final String TEXT_271 = " = String.valueOf(obj";
  protected final String TEXT_272 = "_";
  protected final String TEXT_273 = ");" + NL + "}else{" + NL + "\tnode_";
  protected final String TEXT_274 = " = xTmp";
  protected final String TEXT_275 = "_1_";
  protected final String TEXT_276 = ".selectSingleNode(temp_";
  protected final String TEXT_277 = ");" + NL + "\tstr_";
  protected final String TEXT_278 = " = xTmp";
  protected final String TEXT_279 = "_1_";
  protected final String TEXT_280 = ".valueOf(temp_";
  protected final String TEXT_281 = ");" + NL + "}" + NL + "if (!(xml_api_";
  protected final String TEXT_282 = ".isDefNull(node_";
  protected final String TEXT_283 = ") || xml_api_";
  protected final String TEXT_284 = ".isEmpty(node_";
  protected final String TEXT_285 = ") || xml_api_";
  protected final String TEXT_286 = ".isMissing(node_";
  protected final String TEXT_287 = "))) {" + NL + "\treferenceValue_";
  protected final String TEXT_288 = ".delete(0, referenceValue_";
  protected final String TEXT_289 = ".length());" + NL + "\treferenceValue_";
  protected final String TEXT_290 = ".append(str_";
  protected final String TEXT_291 = ");" + NL + "\treferenceValue_";
  protected final String TEXT_292 = ".append(referenceFieldSeparator_";
  protected final String TEXT_293 = ");" + NL + "" + NL + "\torg.dom4j.XPath xTmp";
  protected final String TEXT_294 = "_2_";
  protected final String TEXT_295 = " = temp_";
  protected final String TEXT_296 = ".createXPath(nsTool_";
  protected final String TEXT_297 = ".addDefaultNSPrefix(\"";
  protected final String TEXT_298 = "/@entity-name\", \"/ob:Openbravo/";
  protected final String TEXT_299 = "\"));" + NL + "    xTmp";
  protected final String TEXT_300 = "_2_";
  protected final String TEXT_301 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_302 = ");" + NL + "    obj";
  protected final String TEXT_303 = "_";
  protected final String TEXT_304 = " = null;" + NL + "    obj";
  protected final String TEXT_305 = "_";
  protected final String TEXT_306 = " = xTmp";
  protected final String TEXT_307 = "_2_";
  protected final String TEXT_308 = ".evaluate(temp_";
  protected final String TEXT_309 = ");" + NL + "    if(obj";
  protected final String TEXT_310 = "_";
  protected final String TEXT_311 = " instanceof String || obj";
  protected final String TEXT_312 = "_";
  protected final String TEXT_313 = " instanceof Number){" + NL + "    \tnode_";
  protected final String TEXT_314 = " = temp_";
  protected final String TEXT_315 = ";" + NL + "    \tstr_";
  protected final String TEXT_316 = " = String.valueOf(obj";
  protected final String TEXT_317 = "_";
  protected final String TEXT_318 = ");" + NL + "    }else{" + NL + "    \tnode_";
  protected final String TEXT_319 = " = xTmp";
  protected final String TEXT_320 = "_2_";
  protected final String TEXT_321 = ".selectSingleNode(temp_";
  protected final String TEXT_322 = ");" + NL + "    \tstr_";
  protected final String TEXT_323 = " = xTmp";
  protected final String TEXT_324 = "_2_";
  protected final String TEXT_325 = ".valueOf(temp_";
  protected final String TEXT_326 = ");" + NL + "\t}" + NL + "\tif (!(xml_api_";
  protected final String TEXT_327 = ".isDefNull(node_";
  protected final String TEXT_328 = ") || xml_api_";
  protected final String TEXT_329 = ".isEmpty(node_";
  protected final String TEXT_330 = ") || xml_api_";
  protected final String TEXT_331 = ".isMissing(node_";
  protected final String TEXT_332 = "))) {" + NL + "\t\treferenceValue_";
  protected final String TEXT_333 = ".append(str_";
  protected final String TEXT_334 = ");" + NL + "\t}else{" + NL + "\t\t//nothing to append" + NL + "\t}" + NL + "\treferenceValue_";
  protected final String TEXT_335 = ".append(referenceFieldSeparator_";
  protected final String TEXT_336 = ");" + NL + "" + NL + "\torg.dom4j.XPath xTmp";
  protected final String TEXT_337 = "_3_";
  protected final String TEXT_338 = " = temp_";
  protected final String TEXT_339 = ".createXPath(nsTool_";
  protected final String TEXT_340 = ".addDefaultNSPrefix(\"";
  protected final String TEXT_341 = "/@identifier\",\"/ob:Openbravo/";
  protected final String TEXT_342 = "\"));" + NL + "    xTmp";
  protected final String TEXT_343 = "_3_";
  protected final String TEXT_344 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_345 = ");" + NL + "    obj";
  protected final String TEXT_346 = "_";
  protected final String TEXT_347 = " = null;" + NL + "    obj";
  protected final String TEXT_348 = "_";
  protected final String TEXT_349 = " = xTmp";
  protected final String TEXT_350 = "_3_";
  protected final String TEXT_351 = ".evaluate(temp_";
  protected final String TEXT_352 = ");" + NL + "    if(obj";
  protected final String TEXT_353 = "_";
  protected final String TEXT_354 = " instanceof String || obj";
  protected final String TEXT_355 = "_";
  protected final String TEXT_356 = " instanceof Number){" + NL + "    \tnode_";
  protected final String TEXT_357 = " = temp_";
  protected final String TEXT_358 = ";" + NL + "    \tstr_";
  protected final String TEXT_359 = " = String.valueOf(obj";
  protected final String TEXT_360 = "_";
  protected final String TEXT_361 = ");" + NL + "    }else{" + NL + "    \tnode_";
  protected final String TEXT_362 = " = xTmp";
  protected final String TEXT_363 = "_3_";
  protected final String TEXT_364 = ".selectSingleNode(temp_";
  protected final String TEXT_365 = ");" + NL + "    \tstr_";
  protected final String TEXT_366 = " = xTmp";
  protected final String TEXT_367 = "_3_";
  protected final String TEXT_368 = ".valueOf(temp_";
  protected final String TEXT_369 = ");" + NL + "\t}" + NL + "\tif (!(xml_api_";
  protected final String TEXT_370 = ".isDefNull(node_";
  protected final String TEXT_371 = ") || xml_api_";
  protected final String TEXT_372 = ".isEmpty(node_";
  protected final String TEXT_373 = ") || xml_api_";
  protected final String TEXT_374 = ".isMissing(node_";
  protected final String TEXT_375 = "))) {" + NL + "\t\treferenceValue_";
  protected final String TEXT_376 = ".append(str_";
  protected final String TEXT_377 = ");" + NL + "\t}else{" + NL + "\t\t//nothing to append" + NL + "\t}" + NL + "\treferenceValue_";
  protected final String TEXT_378 = ".append(referenceFieldSeparator_";
  protected final String TEXT_379 = ");" + NL + "" + NL + "\torg.dom4j.XPath xTmp";
  protected final String TEXT_380 = "_4_";
  protected final String TEXT_381 = " = temp_";
  protected final String TEXT_382 = ".createXPath(nsTool_";
  protected final String TEXT_383 = ".addDefaultNSPrefix(\"";
  protected final String TEXT_384 = "/@transient\",\"/ob:Openbravo/";
  protected final String TEXT_385 = "\"));" + NL + "    xTmp";
  protected final String TEXT_386 = "_4_";
  protected final String TEXT_387 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_388 = ");" + NL + "    obj";
  protected final String TEXT_389 = "_";
  protected final String TEXT_390 = " = null;" + NL + "    obj";
  protected final String TEXT_391 = "_";
  protected final String TEXT_392 = " = xTmp";
  protected final String TEXT_393 = "_4_";
  protected final String TEXT_394 = ".evaluate(temp_";
  protected final String TEXT_395 = ");" + NL + "    if(obj";
  protected final String TEXT_396 = "_";
  protected final String TEXT_397 = " instanceof String || obj";
  protected final String TEXT_398 = "_";
  protected final String TEXT_399 = " instanceof Number){" + NL + "    \tnode_";
  protected final String TEXT_400 = " = temp_";
  protected final String TEXT_401 = ";" + NL + "    \tstr_";
  protected final String TEXT_402 = " = String.valueOf(obj";
  protected final String TEXT_403 = "_";
  protected final String TEXT_404 = ");" + NL + "    }else{" + NL + "    \tnode_";
  protected final String TEXT_405 = " = xTmp";
  protected final String TEXT_406 = "_4_";
  protected final String TEXT_407 = ".selectSingleNode(temp_";
  protected final String TEXT_408 = ");" + NL + "    \tstr_";
  protected final String TEXT_409 = " = xTmp";
  protected final String TEXT_410 = "_4_";
  protected final String TEXT_411 = ".valueOf(temp_";
  protected final String TEXT_412 = ");" + NL + "\t}" + NL + "\tif (!(xml_api_";
  protected final String TEXT_413 = ".isDefNull(node_";
  protected final String TEXT_414 = ") || xml_api_";
  protected final String TEXT_415 = ".isEmpty(node_";
  protected final String TEXT_416 = ") || xml_api_";
  protected final String TEXT_417 = ".isMissing(node_";
  protected final String TEXT_418 = "))) {" + NL + "\t\treferenceValue_";
  protected final String TEXT_419 = ".append(str_";
  protected final String TEXT_420 = ");" + NL + "\t}else{" + NL + "\t\t//nothing to append" + NL + "\t}" + NL + "\treferenceValue_";
  protected final String TEXT_421 = ".append(referenceFieldSeparator_";
  protected final String TEXT_422 = ");" + NL + "" + NL + "\torg.dom4j.XPath xTmp";
  protected final String TEXT_423 = "_5_";
  protected final String TEXT_424 = " = temp_";
  protected final String TEXT_425 = ".createXPath(nsTool_";
  protected final String TEXT_426 = ".addDefaultNSPrefix(\"";
  protected final String TEXT_427 = "/@inactive\", \"/ob:Openbravo/";
  protected final String TEXT_428 = "\"));" + NL + "    xTmp";
  protected final String TEXT_429 = "_5_";
  protected final String TEXT_430 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_431 = ");" + NL + "    obj";
  protected final String TEXT_432 = "_";
  protected final String TEXT_433 = " = null;" + NL + "    obj";
  protected final String TEXT_434 = "_";
  protected final String TEXT_435 = " = xTmp";
  protected final String TEXT_436 = "_5_";
  protected final String TEXT_437 = ".evaluate(temp_";
  protected final String TEXT_438 = ");" + NL + "    if(obj";
  protected final String TEXT_439 = "_";
  protected final String TEXT_440 = " instanceof String || obj";
  protected final String TEXT_441 = "_";
  protected final String TEXT_442 = " instanceof Number){" + NL + "    \tnode_";
  protected final String TEXT_443 = " = temp_";
  protected final String TEXT_444 = ";" + NL + "   \t\tstr_";
  protected final String TEXT_445 = " = String.valueOf(obj";
  protected final String TEXT_446 = "_";
  protected final String TEXT_447 = ");" + NL + "    }else{" + NL + "    \tnode_";
  protected final String TEXT_448 = " = xTmp";
  protected final String TEXT_449 = "_5_";
  protected final String TEXT_450 = ".selectSingleNode(temp_";
  protected final String TEXT_451 = ");" + NL + "    \tstr_";
  protected final String TEXT_452 = " = xTmp";
  protected final String TEXT_453 = "_5_";
  protected final String TEXT_454 = ".valueOf(temp_";
  protected final String TEXT_455 = ");" + NL + "\t}" + NL + "\tif (!(xml_api_";
  protected final String TEXT_456 = ".isDefNull(node_";
  protected final String TEXT_457 = ") || xml_api_";
  protected final String TEXT_458 = ".isEmpty(node_";
  protected final String TEXT_459 = ") || xml_api_";
  protected final String TEXT_460 = ".isMissing(node_";
  protected final String TEXT_461 = "))) {" + NL + "\t\treferenceValue_";
  protected final String TEXT_462 = ".append(str_";
  protected final String TEXT_463 = ");" + NL + "\t}else{" + NL + "\t\t//nothing to append" + NL + "\t}" + NL + "\t";
  protected final String TEXT_464 = ".";
  protected final String TEXT_465 = " = referenceValue_";
  protected final String TEXT_466 = ".toString();" + NL + "}else{" + NL + "\t// is it nullable?" + NL + "\t";
  protected final String TEXT_467 = ".";
  protected final String TEXT_468 = " = null;" + NL + "}";
  protected final String TEXT_469 = NL + "org.dom4j.XPath xTmp";
  protected final String TEXT_470 = "_";
  protected final String TEXT_471 = " = temp_";
  protected final String TEXT_472 = ".createXPath(nsTool_";
  protected final String TEXT_473 = ".addDefaultNSPrefix(\"";
  protected final String TEXT_474 = "\", \"/ob:Openbravo/";
  protected final String TEXT_475 = "\"));" + NL + "xTmp";
  protected final String TEXT_476 = "_";
  protected final String TEXT_477 = ".setNamespaceURIs(xmlNameSpaceMap_";
  protected final String TEXT_478 = ");" + NL + "Object obj";
  protected final String TEXT_479 = "_";
  protected final String TEXT_480 = " = xTmp";
  protected final String TEXT_481 = "_";
  protected final String TEXT_482 = ".evaluate(temp_";
  protected final String TEXT_483 = ");" + NL + "if(obj";
  protected final String TEXT_484 = "_";
  protected final String TEXT_485 = " instanceof String || obj";
  protected final String TEXT_486 = "_";
  protected final String TEXT_487 = " instanceof Number){" + NL + "   \tnode_";
  protected final String TEXT_488 = " = temp_";
  protected final String TEXT_489 = ";" + NL + "   \tstr_";
  protected final String TEXT_490 = " = String.valueOf(obj";
  protected final String TEXT_491 = "_";
  protected final String TEXT_492 = ");" + NL + "}else{" + NL + "   \tnode_";
  protected final String TEXT_493 = " = xTmp";
  protected final String TEXT_494 = "_";
  protected final String TEXT_495 = ".selectSingleNode(temp_";
  protected final String TEXT_496 = ");" + NL + "   \tstr_";
  protected final String TEXT_497 = " = xTmp";
  protected final String TEXT_498 = "_";
  protected final String TEXT_499 = ".valueOf(temp_";
  protected final String TEXT_500 = ");" + NL + "}";
  protected final String TEXT_501 = NL + "if(xml_api_";
  protected final String TEXT_502 = ".isDefNull(node_";
  protected final String TEXT_503 = ")){" + NL + "\t";
  protected final String TEXT_504 = ".";
  protected final String TEXT_505 = " =null;" + NL + "}else if(xml_api_";
  protected final String TEXT_506 = ".isEmpty(node_";
  protected final String TEXT_507 = ")){" + NL + "\t";
  protected final String TEXT_508 = ".";
  protected final String TEXT_509 = " =\"\";" + NL + "}else if(xml_api_";
  protected final String TEXT_510 = ".isMissing(node_";
  protected final String TEXT_511 = " )){ " + NL + "\t";
  protected final String TEXT_512 = ".";
  protected final String TEXT_513 = " =";
  protected final String TEXT_514 = ";" + NL + "}else{";
  protected final String TEXT_515 = NL + "if(xml_api_";
  protected final String TEXT_516 = ".isEmpty(node_";
  protected final String TEXT_517 = ")){" + NL + "\t";
  protected final String TEXT_518 = ".";
  protected final String TEXT_519 = " =\"\";" + NL + "}else if(xml_api_";
  protected final String TEXT_520 = ".isMissing(node_";
  protected final String TEXT_521 = " )){ " + NL + "\t";
  protected final String TEXT_522 = ".";
  protected final String TEXT_523 = " =";
  protected final String TEXT_524 = ";" + NL + "}else{";
  protected final String TEXT_525 = "\t" + NL + "if(xml_api_";
  protected final String TEXT_526 = ".isDefNull(node_";
  protected final String TEXT_527 = ")){" + NL + "\t";
  protected final String TEXT_528 = ".";
  protected final String TEXT_529 = " =null;" + NL + "}else if(xml_api_";
  protected final String TEXT_530 = ".isEmpty(node_";
  protected final String TEXT_531 = ") || xml_api_";
  protected final String TEXT_532 = ".isMissing(node_";
  protected final String TEXT_533 = ")){" + NL + "\t";
  protected final String TEXT_534 = ".";
  protected final String TEXT_535 = "=";
  protected final String TEXT_536 = ";" + NL + "}else{";
  protected final String TEXT_537 = NL + "if(xml_api_";
  protected final String TEXT_538 = ".isMissing(node_";
  protected final String TEXT_539 = ") || xml_api_";
  protected final String TEXT_540 = ".isEmpty(node_";
  protected final String TEXT_541 = ")){" + NL + "\t";
  protected final String TEXT_542 = ".";
  protected final String TEXT_543 = " =";
  protected final String TEXT_544 = ";" + NL + "}else{";
  protected final String TEXT_545 = NL + "\t";
  protected final String TEXT_546 = ".";
  protected final String TEXT_547 = " = str_";
  protected final String TEXT_548 = ";";
  protected final String TEXT_549 = NL + "\tstr_";
  protected final String TEXT_550 = " = str_";
  protected final String TEXT_551 = ".replace('T',' ');" + NL + "\tstr_";
  protected final String TEXT_552 = " = str_";
  protected final String TEXT_553 = ".replaceAll(\"Z\",\"\");" + NL + "\t";
  protected final String TEXT_554 = ".";
  protected final String TEXT_555 = " = ParserUtils.parseTo_Date(str_";
  protected final String TEXT_556 = ", ";
  protected final String TEXT_557 = ");";
  protected final String TEXT_558 = "\t\t\t\t\t\t\t" + NL + "\t";
  protected final String TEXT_559 = ".";
  protected final String TEXT_560 = " = str_";
  protected final String TEXT_561 = ".getBytes(";
  protected final String TEXT_562 = ");";
  protected final String TEXT_563 = NL + "\tif(str_";
  protected final String TEXT_564 = ".endsWith(\".0\")){" + NL + "\t\tstr_";
  protected final String TEXT_565 = " = str_";
  protected final String TEXT_566 = ".substring(0, str_";
  protected final String TEXT_567 = ".length() - 2);" + NL + "\t}" + NL + "\t";
  protected final String TEXT_568 = ".";
  protected final String TEXT_569 = " = ParserUtils.parseTo_";
  protected final String TEXT_570 = "(str_";
  protected final String TEXT_571 = ");";
  protected final String TEXT_572 = NL + "\t";
  protected final String TEXT_573 = ".";
  protected final String TEXT_574 = " = ParserUtils.parseTo_";
  protected final String TEXT_575 = "(ParserUtils.parseTo_Number(str_";
  protected final String TEXT_576 = ", ";
  protected final String TEXT_577 = ", ";
  protected final String TEXT_578 = "));";
  protected final String TEXT_579 = NL + "\t";
  protected final String TEXT_580 = ".";
  protected final String TEXT_581 = " = ParserUtils.parseTo_";
  protected final String TEXT_582 = "(str_";
  protected final String TEXT_583 = ");";
  protected final String TEXT_584 = NL + "}";
  protected final String TEXT_585 = "     ";
  protected final String TEXT_586 = NL;
  protected final String TEXT_587 = " = new ";
  protected final String TEXT_588 = "Struct();";
  protected final String TEXT_589 = NL;
  protected final String TEXT_590 = ".";
  protected final String TEXT_591 = " = ";
  protected final String TEXT_592 = ".";
  protected final String TEXT_593 = ";    \t\t\t\t";
  protected final String TEXT_594 = NL + "\t\t\t" + NL + "\t";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
    
	String endpoint = ElementParameterParser.getValue(node, "__ENDPOINT__");
	String entityName = ElementParameterParser.getValue(node, "__ENTITYNAME__");
	String encoding = ElementParameterParser.getValue(node, "__ENCODING__");

	String username = ElementParameterParser.getValue(node, "__USER__");


	String condition = ElementParameterParser.getValue(node, "__CONDITION__");
	if(condition == null || "".equals(condition)){
		condition = "\"\"";
	}
	String isOrderBy = ElementParameterParser.getValue(node, "__ORDERBY__");
	String orderBy = "";
	if("true".equals(isOrderBy)){
		orderBy = ElementParameterParser.getValue(node, "__ORDERBY_COLUMN__");
		orderBy += "%20";
		orderBy += ElementParameterParser.getValue(node, "__ORDERBY_SORTING__");
	}
	
	String firstResult = ElementParameterParser.getValue(node, "__FIRSTRESULT__");
	if(firstResult==null || "".equals(firstResult)){
		firstResult = "0";
	}
	
	String maxResult = ElementParameterParser.getValue(node, "__MAXRESULT__");
	if(maxResult==null || "".equals(maxResult)){
		maxResult = "-1";
	}
	
	String entities = ElementParameterParser.getValue(node, "__ENTITIES__");
	String[] entitieArray = entities.split(";");
	java.util.Set<String> entitySet = new java.util.HashSet<String>();
	for(int i=0; i<entitieArray.length; i++){
    	entitySet.add(entitieArray[i]);
    }
    
    String advancedSeparatorStr = ElementParameterParser.getValue(node, "__ADVANCED_SEPARATOR__");
	boolean advancedSeparator = (advancedSeparatorStr!=null&&!("").equals(advancedSeparatorStr))?("true").equals(advancedSeparatorStr):false;
	String thousandsSeparator = ElementParameterParser.getValueWithJavaType(node, "__THOUSANDS_SEPARATOR__", JavaTypesManager.CHARACTER);
	String decimalSeparator = ElementParameterParser.getValueWithJavaType(node, "__DECIMAL_SEPARATOR__", JavaTypesManager.CHARACTER);

    stringBuffer.append(TEXT_1);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_5);
    stringBuffer.append(endpoint );
    stringBuffer.append(TEXT_6);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_7);
    stringBuffer.append(username );
    stringBuffer.append(TEXT_8);
    
String passwordFieldName = "__PASS__";

    stringBuffer.append(TEXT_9);
    if (ElementParameterParser.canEncrypt(node, passwordFieldName)) {
    stringBuffer.append(TEXT_10);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_11);
    stringBuffer.append(ElementParameterParser.getEncryptedValue(node, passwordFieldName));
    stringBuffer.append(TEXT_12);
    } else {
    stringBuffer.append(TEXT_13);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_14);
    stringBuffer.append( ElementParameterParser.getValue(node, passwordFieldName));
    stringBuffer.append(TEXT_15);
    }
    stringBuffer.append(TEXT_16);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_17);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_18);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_19);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_20);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_21);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_22);
    stringBuffer.append(condition );
    stringBuffer.append(TEXT_23);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_24);
    stringBuffer.append(orderBy );
    stringBuffer.append(TEXT_25);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_26);
    stringBuffer.append(firstResult );
    stringBuffer.append(TEXT_27);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_28);
    stringBuffer.append(maxResult );
    stringBuffer.append(TEXT_29);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_30);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_31);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_32);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_33);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_34);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_35);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_36);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_37);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_38);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_39);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_40);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_41);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_42);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_43);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_44);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_45);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_46);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_47);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_48);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_49);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_50);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_51);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_52);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_53);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_54);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_55);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_56);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_57);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_58);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_59);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_60);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_61);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_62);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_63);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_64);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_65);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_66);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_67);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_68);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_69);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_70);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_71);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_72);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_73);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_74);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_75);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_76);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_77);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_78);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_79);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_80);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_81);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_82);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_83);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_84);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_85);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_86);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_87);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_88);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_89);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_90);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_91);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_92);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_93);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_94);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_95);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_96);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_97);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_98);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_99);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_100);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_101);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_102);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_103);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_104);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_105);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_106);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_107);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_108);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_109);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_110);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_111);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_112);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_113);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_114);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_115);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_116);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_117);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_118);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_119);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_120);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_121);
    
List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
String firstConnName = "";
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
	IMetadataTable metadata = metadatas.get(0);
	if (metadata!=null) {
		List<IMetadataColumn> columns=metadata.getListColumns();
		if (conns!=null && conns.size() > 0) {		
			IConnection conn = conns.get(0);
			firstConnName = conn.getName();
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) { // test for connection type

    stringBuffer.append(TEXT_122);
    stringBuffer.append(firstConnName );
    stringBuffer.append(TEXT_123);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_124);
    
				//by default, Object type are reference type. List are list of references.
				for (int i=0;i<columns.size();i++) { // loop for columns
					IMetadataColumn column = columns.get(i);
					String columnName = column.getLabel();
					String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
					JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
					//String patternValue = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
					//The date pattern in Openbravo is yyyy-MM-ddThh:mm:ss.SSSZ. But this is an invalid pattern.
					//We use the pattern in hard code: yyyy-MM-dd hh:mm:ss.SSS
					String patternValue = "\"yyyy-MM-dd hh:mm:ss.SSS\"";
					boolean isNotSetDefault = false;
					String defaultValue=column.getDefault();
					if(defaultValue!=null){
						isNotSetDefault = (defaultValue.length()==0);
					}else{
						isNotSetDefault=true;
					}
					String openbravoName = columnName;
					if(columnName.equals("Default")){
						openbravoName = "default";
					}
					if(columnName.equals("Transient")){
						openbravoName = "transient";
					}
					boolean attribute = false;

					if(openbravoName.equals("identifier") || openbravoName.equals("reference")){
						attribute = true;
					}
					
					
					if(javaType == JavaTypesManager.LIST){
						//get the entity name of List item.
						String itemType = openbravoName;
						if(itemType.endsWith("List")){
							itemType = itemType.substring(0, itemType.length()-4);
						}
						//Convert first char to uppercase
						if(itemType.length() > 0){
							char firstChar = itemType.charAt(0);
							if(firstChar >= 'a' && firstChar <= 'z'){
								itemType = itemType.replaceFirst(""+firstChar, ""+(char)(firstChar-32));
							}
						}
						
						while(itemType.length() > 0){
							if(entitySet.contains(itemType)){
								break;
							}
							int ii = itemType.length()-1;
							for(; ii>=0; ii--){
								char charTemp = itemType.charAt(ii);
								if(charTemp >= 'A' && charTemp <= 'Z'){
									itemType = itemType.substring(0, ii);
									break;
								}
							}
							//can't find the item type of the list 
							if(ii < 0){
								itemType = "";
							}
						}
						if(itemType.equals("")){

    stringBuffer.append(TEXT_125);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_126);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_127);
    stringBuffer.append(itemType );
    stringBuffer.append(TEXT_128);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_129);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_130);
    stringBuffer.append(columnName );
    stringBuffer.append(TEXT_131);
    
						}

    stringBuffer.append(TEXT_132);
    stringBuffer.append(columnName );
    stringBuffer.append(TEXT_133);
    stringBuffer.append(itemType );
    stringBuffer.append(TEXT_134);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_135);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_136);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_137);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_138);
    stringBuffer.append(itemType );
    stringBuffer.append(TEXT_139);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_140);
    stringBuffer.append(TEXT_141);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_142);
    stringBuffer.append(columnName );
    stringBuffer.append(TEXT_143);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_144);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_145);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_146);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_147);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_148);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_149);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_150);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_151);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_152);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_153);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_154);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_155);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_156);
    stringBuffer.append(itemType );
    stringBuffer.append(TEXT_157);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_158);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_159);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_160);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_161);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_162);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_163);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_164);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_165);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_166);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_167);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_168);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_169);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_170);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_171);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_172);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_173);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_174);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_175);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_176);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_177);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_178);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_179);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_180);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_181);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_182);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_183);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_184);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_185);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_186);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_187);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_188);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_189);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_190);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_191);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_192);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_193);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_194);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_195);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_196);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_197);
    stringBuffer.append(itemType );
    stringBuffer.append(TEXT_198);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_199);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_200);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_201);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_202);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_203);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_204);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_205);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_206);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_207);
    stringBuffer.append(itemType );
    stringBuffer.append(TEXT_208);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_209);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_210);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_211);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_212);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_213);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_214);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_215);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_216);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_217);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_218);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_219);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_220);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_221);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_222);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_223);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_224);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_225);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_226);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_227);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_228);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_229);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_230);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_231);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_232);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_233);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_234);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_235);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_236);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_237);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_238);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_239);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_240);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_241);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_242);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_243);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_244);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_245);
    stringBuffer.append(TEXT_246);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_247);
    stringBuffer.append(columnName );
    stringBuffer.append(TEXT_248);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_249);
    
					}else if(javaType == JavaTypesManager.OBJECT){//if(javaType == JavaTypesManager.LIST){

    stringBuffer.append(TEXT_250);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_251);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_252);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_253);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_254);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_255);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_256);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_257);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_258);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_259);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_260);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_261);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_262);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_263);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_264);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_265);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_266);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_267);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_268);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_269);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_270);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_271);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_272);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_273);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_274);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_275);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_276);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_277);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_278);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_279);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_280);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_281);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_282);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_283);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_284);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_285);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_286);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_287);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_288);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_289);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_290);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_291);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_292);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_293);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_294);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_295);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_296);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_297);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_298);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_299);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_300);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_301);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_302);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_303);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_304);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_305);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_306);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_307);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_308);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_309);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_310);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_311);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_312);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_313);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_314);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_315);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_316);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_317);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_318);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_319);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_320);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_321);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_322);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_323);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_324);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_325);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_326);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_327);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_328);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_329);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_330);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_331);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_332);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_333);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_334);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_335);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_336);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_337);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_338);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_339);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_340);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_341);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_342);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_343);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_344);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_345);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_346);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_347);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_348);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_349);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_350);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_351);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_352);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_353);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_354);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_355);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_356);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_357);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_358);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_359);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_360);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_361);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_362);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_363);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_364);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_365);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_366);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_367);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_368);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_369);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_370);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_371);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_372);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_373);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_374);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_375);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_376);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_377);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_378);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_379);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_380);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_381);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_382);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_383);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_384);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_385);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_386);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_387);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_388);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_389);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_390);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_391);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_392);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_393);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_394);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_395);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_396);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_397);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_398);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_399);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_400);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_401);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_402);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_403);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_404);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_405);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_406);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_407);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_408);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_409);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_410);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_411);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_412);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_413);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_414);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_415);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_416);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_417);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_418);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_419);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_420);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_421);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_422);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_423);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_424);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_425);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_426);
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_427);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_428);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_429);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_430);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_431);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_432);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_433);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_434);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_435);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_436);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_437);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_438);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_439);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_440);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_441);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_442);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_443);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_444);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_445);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_446);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_447);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_448);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_449);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_450);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_451);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_452);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_453);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_454);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_455);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_456);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_457);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_458);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_459);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_460);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_461);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_462);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_463);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_464);
    stringBuffer.append(columnName );
    stringBuffer.append(TEXT_465);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_466);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_467);
    stringBuffer.append(columnName );
    stringBuffer.append(TEXT_468);
    
					}else{//}else if(javaType == JavaTypesManager.OBJECT){
//for other types

    stringBuffer.append(TEXT_469);
    stringBuffer.append(i );
    stringBuffer.append(TEXT_470);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_471);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_472);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_473);
    stringBuffer.append(attribute ? "@" : "" );
    stringBuffer.append(openbravoName );
    stringBuffer.append(TEXT_474);
    stringBuffer.append(entityName );
    stringBuffer.append(TEXT_475);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_476);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_477);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_478);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_479);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_480);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_481);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_482);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_483);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_484);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_485);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_486);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_487);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_488);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_489);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_490);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_491);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_492);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_493);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_494);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_495);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_496);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_497);
    stringBuffer.append(i);
    stringBuffer.append(TEXT_498);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_499);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_500);
    
						if(javaType == JavaTypesManager.STRING){
							if(column.isNullable()){

    stringBuffer.append(TEXT_501);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_502);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_503);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_504);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_505);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_506);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_507);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_508);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_509);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_510);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_511);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_512);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_513);
    stringBuffer.append(isNotSetDefault?null:column.getDefault());
    stringBuffer.append(TEXT_514);
    
							}else{ // column.isNullable()

    stringBuffer.append(TEXT_515);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_516);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_517);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_518);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_519);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_520);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_521);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_522);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_523);
    stringBuffer.append(isNotSetDefault?JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate):column.getDefault());
    stringBuffer.append(TEXT_524);
    
							}
						}else{ // other type
							if(column.isNullable()){

    stringBuffer.append(TEXT_525);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_526);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_527);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_528);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_529);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_530);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_531);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_532);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_533);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_534);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_535);
    stringBuffer.append(isNotSetDefault?null:column.getDefault());
    stringBuffer.append(TEXT_536);
    
							}else{ // column.isNullable()

    stringBuffer.append(TEXT_537);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_538);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_539);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_540);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_541);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_542);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_543);
    stringBuffer.append(isNotSetDefault?JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate):column.getDefault());
    stringBuffer.append(TEXT_544);
    
							}
						}
					
						if (javaType == JavaTypesManager.STRING ) {

    stringBuffer.append(TEXT_545);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_546);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_547);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_548);
    
						} else if (javaType == JavaTypesManager.DATE) {

    stringBuffer.append(TEXT_549);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_550);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_551);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_552);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_553);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_554);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_555);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_556);
    stringBuffer.append( patternValue );
    stringBuffer.append(TEXT_557);
      
						} else if(javaType == JavaTypesManager.BYTE_ARRAY){ 

    stringBuffer.append(TEXT_558);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_559);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_560);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_561);
    stringBuffer.append(encoding );
    stringBuffer.append(TEXT_562);
    
						} else if(javaType == JavaTypesManager.LONG || javaType == JavaTypesManager.INTEGER){

    stringBuffer.append(TEXT_563);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_564);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_565);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_566);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_567);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_568);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_569);
    stringBuffer.append( typeToGenerate );
    stringBuffer.append(TEXT_570);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_571);
    
						}else if(advancedSeparator && JavaTypesManager.isNumberType(javaType)) { 

    stringBuffer.append(TEXT_572);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_573);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_574);
    stringBuffer.append( typeToGenerate );
    stringBuffer.append(TEXT_575);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_576);
    stringBuffer.append( thousandsSeparator );
    stringBuffer.append(TEXT_577);
    stringBuffer.append( decimalSeparator );
    stringBuffer.append(TEXT_578);
    
						} else {

    stringBuffer.append(TEXT_579);
    stringBuffer.append(conn.getName() );
    stringBuffer.append(TEXT_580);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_581);
    stringBuffer.append( typeToGenerate );
    stringBuffer.append(TEXT_582);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_583);
    
						}

    stringBuffer.append(TEXT_584);
    
					}//if(javaType == JavaTypesManager.LIST)
				}// loop for columns
			}// test for connection type
			
			for (int i=0;i<conns.size();i++) {//other conns
				IConnection tmpconn = conns.get(i);
				if ((tmpconn.getName().compareTo(firstConnName)!=0)&&(tmpconn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA))) {

    stringBuffer.append(TEXT_585);
    stringBuffer.append(TEXT_586);
    stringBuffer.append(tmpconn.getName() );
    stringBuffer.append(TEXT_587);
    stringBuffer.append(tmpconn.getName() );
    stringBuffer.append(TEXT_588);
    
		    	 	for (IMetadataColumn column: metadata.getListColumns()) {

    stringBuffer.append(TEXT_589);
    stringBuffer.append(tmpconn.getName() );
    stringBuffer.append(TEXT_590);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_591);
    stringBuffer.append(firstConnName );
    stringBuffer.append(TEXT_592);
    stringBuffer.append(column.getLabel() );
    stringBuffer.append(TEXT_593);
    
			 		}
				}
			}//other conns
		} // if (conns!=null && conns.size() > 0) {
	}// if (metadata!=null)
} //if ((metadatas!=null)&&(metadatas.size()>0))

    stringBuffer.append(TEXT_594);
    return stringBuffer.toString();
  }
}
